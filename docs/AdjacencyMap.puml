@startuml
!include Interfaces.puml

interface kotlin.collections.MutableMap
note left: see kotlin [[https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-map/ Map]]

package adjacencymap {
    abstract class AdjacencyMapGraph<Vertex> {
        - _adjacencyMap : MutableMap<Vertex, MutableSet<Vertex>>

        + containsVertex(vertex: Vertex): Boolean
        + isAdjacent(from: Vertex, to: Vertex): Boolean
        + neighbors(vertex: Vertex): Set<Vertex>?
        + equals(other: Any?): Boolean
        + hashCode(): Int
    }
    AdjacencyMapGraph --> kotlin.collections.MutableMap
    AdjacencyMapGraph --> Graph

    abstract class MutableAdjacencyMapGraph<Vertex> {
        + addVertex(vertex: Vertex): Boolean
        + removeVertex(vertex: Vertex): Boolean
        + removeEdge(from: Vertex, to: Vertex): Boolean
    }
    MutableAdjacencyMapGraph --> Graph
    MutableAdjacencyMapGraph --> Mutable
    MutableAdjacencyMapGraph --> AdjacencyMapGraph

    class AdjacencyMapMutableGraphImpl<Vertex> {
        + addEdge(from: Vertex, to: Vertex): Boolean
    }
    AdjacencyMapMutableGraphImpl --> MutableGraph
    AdjacencyMapMutableGraphImpl --> MutableAdjacencyMapGraph

    class ValuedAdjacencyMapMutableGraphImpl<Vertex, EdgeValue> {
        + addEdge(from: Vertex, to: Vertex, value: EdgeValue): Boolean
        + getEdgeValue(from: Vertex, to: Vertex): EdgeValue?
        + putEdgeValue(from: Vertex, to: Vertex, value: EdgeValue)
        + removeEdgeValue(from: Vertex, to: Vertex): Boolean
    }
    ValuedAdjacencyMapMutableGraphImpl --> ValuedGraph
    ValuedAdjacencyMapMutableGraphImpl --> ValuedMutableGraph
    ValuedAdjacencyMapMutableGraphImpl --> MutableAdjacencyMapGraph

}

@enduml